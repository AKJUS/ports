* deno's upgrade feature cannot work on OpenBSD, directly disable it
* disable deno_panic

Index: cli/Cargo.toml
--- cli/Cargo.toml.orig
+++ cli/Cargo.toml
@@ -32,7 +32,7 @@ harness = false
 path = "./bench/lsp_bench_standalone.rs"
 
 [features]
-default = ["upgrade", "__vendored_zlib_ng"]
+default = ["__vendored_zlib_ng"]
 # A feature that enables heap profiling with dhat on Linux.
 # 1. Compile with `cargo build --profile=release-with-debug --features=dhat-heap`
 # 2. Run the executable. It will output a dhat-heap.json file.
@@ -49,7 +49,7 @@ hmr = ["deno_runtime/hmr", "deno_snapshots/disable"]
 __vendored_zlib_ng = ["flate2/zlib-ng-compat", "libz-sys/zlib-ng"]
 lsp-tracing = ["dep:tracing", "dep:tracing-subscriber", "dep:tracing-opentelemetry"]
 # Custom panic trace with `deno_panic`
-panic-trace = ["deno_panic"]
+# panic-trace = ["deno_panic"]
 
 [build-dependencies]
 deno_runtime = { workspace = true, features = ["include_js_files_for_snapshotting", "only_snapshotted_js_sources"] }
@@ -83,7 +83,7 @@ deno_media_type = { workspace = true, features = ["dat
 deno_npm.workspace = true
 deno_npm_cache.workspace = true
 deno_package_json = { workspace = true, features = ["sync"] }
-deno_panic = { version = "0.1.0", optional = true }
+#deno_panic = { version = "0.1.0", optional = true }
 deno_path_util.workspace = true
 deno_resolver = { workspace = true, features = ["sync"] }
 deno_runtime = { workspace = true, features = ["include_js_files_for_snapshotting"] }
