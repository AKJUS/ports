Index: ext/http/request_properties.rs
--- ext/http/request_properties.rs.orig
+++ ext/http/request_properties.rs
@@ -165,14 +165,14 @@ impl HttpPropertyExtractor for DefaultHttpPropertyExtr
       NetworkStreamAddress::Ip(ip) => Some(ip.port() as _),
       #[cfg(unix)]
       NetworkStreamAddress::Unix(_) => None,
-      #[cfg(unix)]
+      #[cfg(target_os = "linux")]
       NetworkStreamAddress::Vsock(vsock) => Some(vsock.port()),
     };
     let peer_address = match peer_address {
       NetworkStreamAddress::Ip(addr) => Rc::from(addr.ip().to_string()),
       #[cfg(unix)]
       NetworkStreamAddress::Unix(_) => Rc::from("unix"),
-      #[cfg(unix)]
+      #[cfg(target_os = "linux")]
       NetworkStreamAddress::Vsock(addr) => {
         Rc::from(format!("vsock:{}", addr.cid()))
       }
@@ -214,7 +214,7 @@ fn listener_properties(
     NetworkStreamAddress::Ip(ip) => Some(ip.port() as _),
     #[cfg(unix)]
     NetworkStreamAddress::Unix(_) => None,
-    #[cfg(unix)]
+    #[cfg(target_os = "linux")]
     NetworkStreamAddress::Vsock(vsock) => Some(vsock.port()),
   };
   Ok(HttpListenProperties {
@@ -260,7 +260,7 @@ fn req_host_from_addr(
       percent_encoding::NON_ALPHANUMERIC,
     )
     .to_string(),
-    #[cfg(unix)]
+    #[cfg(target_os = "linux")]
     NetworkStreamAddress::Vsock(vsock) => {
       format!("{}:{}", vsock.cid(), vsock.port())
     }
@@ -273,7 +273,7 @@ fn req_scheme_from_stream_type(stream_type: NetworkStr
     NetworkStreamType::Tls => "https://",
     #[cfg(unix)]
     NetworkStreamType::Unix => "http+unix://",
-    #[cfg(unix)]
+    #[cfg(target_os = "linux")]
     NetworkStreamType::Vsock => "http+vsock://",
   }
 }
@@ -299,7 +299,7 @@ fn req_host<'a>(
       }
       #[cfg(unix)]
       NetworkStreamType::Unix => {}
-      #[cfg(unix)]
+      #[cfg(target_os = "linux")]
       NetworkStreamType::Vsock => {}
     }
     return Some(Cow::Borrowed(auth.as_str()));
