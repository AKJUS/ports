Index: modcargo-crates/psm-0.1.26/src/arch/aarch_aapcs64.s
--- modcargo-crates/psm-0.1.26/src/arch/aarch_aapcs64.s.orig
+++ modcargo-crates/psm-0.1.26/src/arch/aarch_aapcs64.s
@@ -32,6 +32,7 @@ TYPE(rust_psm_stack_direction)
 FUNCTION(rust_psm_stack_direction):
 /* extern "C" fn() -> u8 */
 .cfi_startproc
+    bti c
     orr w0, wzr, #STACK_DIRECTION_DESCENDING
     ret
 END_FUNCTION(rust_psm_stack_direction)
@@ -44,6 +45,7 @@ TYPE(rust_psm_stack_pointer)
 FUNCTION(rust_psm_stack_pointer):
 /* extern "C" fn() -> *mut u8 */
 .cfi_startproc
+    bti c
     mov x0, sp
     ret
 END_FUNCTION(rust_psm_stack_pointer)
@@ -57,6 +59,7 @@ FUNCTION(rust_psm_replace_stack):
 /* extern "C" fn(r0: usize, r1: extern "C" fn(usize), r2: *mut u8) */
 .cfi_startproc
 /* All we gotta do is set the stack pointer to %rdx & tail-call the callback in %rsi */
+    bti c
     mov sp, x2
     br x1
 END_FUNCTION(rust_psm_replace_stack)
@@ -69,6 +72,7 @@ TYPE(rust_psm_on_stack)
 FUNCTION(rust_psm_on_stack):
 /* extern "C" fn(r0: usize, r1: usize, r2: extern "C" fn(usize, usize), r3: *mut u8) */
 .cfi_startproc
+    bti c
     stp x29, x30, [sp, #-16]!
     .cfi_def_cfa sp, 16
     mov x29, sp
