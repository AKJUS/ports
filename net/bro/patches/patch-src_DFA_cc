https://github.com/zeek/zeek/pull/3997

Index: src/DFA.cc
--- src/DFA.cc.orig
+++ src/DFA.cc
@@ -310,9 +310,9 @@ DFA_State* DFA_State_Cache::Lookup(const NFA_state_lis
 	{
 	// We assume that state ID's don't exceed 10 digits, plus
 	// we allow one more character for the delimiter.
-	auto id_tag_buf = std::make_unique<u_char[]>(nfas.length() * 11 + 1);
+	auto id_tag_buf = std::make_unique<char[]>(nfas.length() * 11 + 1);
 	auto id_tag = id_tag_buf.get();
-	u_char* p = id_tag;
+	char* p = id_tag;
 
 	for ( int i = 0; i < nfas.length(); ++i )
 		{
@@ -335,7 +335,7 @@ DFA_State* DFA_State_Cache::Lookup(const NFA_state_lis
 	// HashKey because the data is copied into the key.
 	hash128_t hash;
 	KeyedHash::Hash128(id_tag, p - id_tag, &hash);
-	*digest = DigestStr(reinterpret_cast<const unsigned char*>(hash), 16);
+	*digest = DigestStr(reinterpret_cast<const char*>(hash), 16);
 
 	auto entry = states.find(*digest);
 	if ( entry == states.end() )
